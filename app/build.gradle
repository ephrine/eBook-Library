/*
 * Copyright (c) 2019. Ephrine Apps
 * Code written by Devesh Chaudhari
 * Website: https://www.ephrine.in
 */

apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply plugin: 'com.google.firebase.firebase-perf'


def f = new File('app/google-services.json')
if (!f.exists()) {
    new URL(System.getenv('google.services.json')).withInputStream { i ->
        f.withOutputStream {
            it << i
        }
    }
    project.logger.info('Downloaded google-services.json')

} else {
    project.logger.info('google-services.json already exists')
}

Properties properties = new Properties()

def kk = new File('bitvedasenv.properties')
if (!kk.exists()) {
    new URL(System.getenv('env.url')).withInputStream { i -> kk.withOutputStream { it << kk } }

    project.logger.info('Downloaded env.properties for signing')
    properties.load(project.rootProject.file('env.properties').newDataInputStream())


}

properties.load(project.rootProject.file('bitvedasenv.properties').newDataInputStream())

def keypassword = properties.getProperty('sign.key.password')
def keystorepassword = properties.getProperty('sign.key.storepassword')
def keyalias = properties.getProperty('sign.key.alias')
def keypath= properties.getProperty('sign.key.path')




android {

       signingConfigs {
           productionAPK {
               storeFile file(keypath)
               storePassword keystorepassword
               keyAlias = keyalias
               keyPassword= keypassword
           }
       }



    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        applicationId "devesh.ephrine.ebooks"
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true


    resValue "string", "AdMob_App_Id", "\"" + properties.getProperty('admob.app.id') + "\""
    resValue "string", "AdMob_Banner_Id", "\"" + properties.getProperty('admob.ad.banner') + "\""
    resValue "string", "AdMob_Int_Id", "\"" + properties.getProperty('admob.ad.int') + "\""
    resValue "string", "Store_URL", "\"" + properties.getProperty('store.url') + "\""
 

    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
           // signingConfig signingConfigs.productionAPK
        }
        debug {
           // signingConfig signingConfigs.productionAPK
        }
    }

    lintOptions {
        checkReleaseBuilds false
        // Or, if you prefer, you can continue to check for errors in release builds,
        // but continue the build even when errors are found:
        abortOnError false
    }

}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    //  implementation 'com.google.firebase:firebase-core:16.0.4'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.vectordrawable:vectordrawable:1.1.0'
    implementation 'androidx.navigation:navigation-fragment:2.1.0'
    implementation 'androidx.navigation:navigation-ui:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


// Import the platform
    implementation platform('com.google.firebase:firebase-bom:24.3.0')

    // When using a BoM, dependencies don't require a specified version
    // If you do specify a version, it overrides the library version specified in the BoM
    implementation 'com.google.firebase:firebase-core'
    implementation 'com.google.firebase:firebase-auth'
    implementation 'com.google.firebase:firebase-database'
    implementation 'com.google.firebase:firebase-storage'
    implementation 'com.google.firebase:firebase-ads'
    //implementation 'com.google.firebase:firebase-ads:18.3.0'
    implementation 'com.google.firebase:firebase-config'
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.crashlytics.sdk.android:crashlytics'
    implementation 'com.google.firebase:firebase-perf'

    // FirebaseUI for Firebase Auth
    implementation 'com.firebaseui:firebase-ui-auth:5.0.0'

    // Material design
    implementation 'com.google.android.material:material:1.2.0-alpha02'

    def work_version = "2.2.0"
    // (Java only)
    implementation "androidx.work:work-runtime:$work_version"
    implementation 'com.android.support:recyclerview-selection:+'

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.10.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.10.0'

    //PDF Viewer
    implementation 'com.github.barteksc:android-pdf-viewer:3.1.0-beta.1'

    // Google Play Billing Library
    // implementation 'com.android.billingclient:billing:2.0.0'
    implementation 'com.anjlab.android.iab.v3:library:1.1.0'


    //Google JSON Converter
    //  implementation 'com.google.code.gson:gson:2.8.6'

    //Horizontal ProgressBar
    implementation 'com.github.castorflex.smoothprogressbar:library:1.1.0'

    def multidex_version = "2.0.1"
    implementation "androidx.multidex:multidex:$multidex_version"

    //Chrome Tabs
    // implementation 'com.androidx.support:customtabs:23.3.0'

}
